{
    "comments": [
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "Is probably only an issue with proxy auth. Have to check if we can fix this in\n3.0 without modifying the API.",
            "date": "2005-10-05T05:53:56.000+0000",
            "id": 0
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "(In reply to comment #1)\n> Is probably only an issue with proxy auth. Have to check if we can fix this in\n> 3.0 without modifying the API.\n\nI am afraid not. At the moment there's no way of telling for classes that\nimplement the AuthScheme interface whether the request is to be sent via a proxy\nor not.\n\nOleg",
            "date": "2005-10-05T06:06:58.000+0000",
            "id": 1
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Owen,\nCan you also capture the content of the Digest response generated by Firefox for\nnon-SSL (non-tunneled) connections ? I wonder if the digest-uri value would be\nsomething like \"http://www.yahoo.com:80/stuff\" or like \"/stuff\"\n\nMeanwhile, we'll be thinking of a workaround for the 3.0 release that does not\nrequire API changes. The proper fix for this problem most likely will have to\nwait until 3.1 or even 4.0\n\nOleg",
            "date": "2005-10-05T07:07:39.000+0000",
            "id": 2
        },
        {
            "author": "Owen Smith",
            "body": "(In reply to comment #3)\n> Owen,\n> Can you also capture the content of the Digest response generated by Firefox for\n> non-SSL (non-tunneled) connections ? I wonder if the digest-uri value would be\n> something like \"http://www.yahoo.com:80/stuff\" or like \"/stuff\"\n> \n> Meanwhile, we'll be thinking of a workaround for the 3.0 release that does not\n> require API changes. The proper fix for this problem most likely will have to\n> wait until 3.1 or even 4.0\n> \n> Oleg\n\nOleg,\nSee below for similar headers for a non-SSL connection.  It's like \"/stuff\"\nthough I'm not sure if that is strictly RFC compliant or not.  Tommorrow I'll\ntry a few variations and see if anything interesting happens.\n\nfrom firefox:\nGET http://www.google.com/search?q=combrio HTTP/1.1\nProxy-Authorization: Digest username=\"proxytest\", realm=\"Digest\",\nnonce=\"9ead1d6748c8c5015ad4977b92780d2d2bf1ce754d79f240533feaf1a90b59badf7027bba74334a7\",\nuri=\"/search?q=combrio\", algorithm=MD5-sess,\nresponse=\"42ad6a4571edb21780c26827a0c3910e\",\nopaque=\"9c55241868ffb3f34487f1a72519110a\", qop=auth, nc=00000001,\ncnonce=\"2e4b57bad694b520\"\n\nOwen",
            "date": "2005-10-05T07:48:41.000+0000",
            "id": 3
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "(In reply to comment #4)\n...\n> Oleg,\n> See below for similar headers for a non-SSL connection.  It's like \"/stuff\"\n> though I'm not sure if that is strictly RFC compliant or not.  Tommorrow I'll\n> try a few variations and see if anything interesting happens.\n> \n\nSo, the situation is far from being simple. There's no consistency in how\nvarious HTTP agents and servers handle the digest-uri. I re-read the RFC and\nthis did not make things any clearer for me. There are ways of seeing and not\nseeing, depending on what one wants or does not want to see. Hence, the\ninconsistency in implementations\n\nI suggest the following:\n(1) For release 3.0 we basically do nothing because we simply can't work around\nthe problem without unfreezing the API\n(2) For release 3.1 we can fix the problem for CONNECT methods. This can be done\nwithout breaking the 3.x API comatibility\n(3) We revisit the problem in the course of 4.0 development and try to come up\nwith a proper fix for the problem\n\nOleg",
            "date": "2005-10-05T18:25:46.000+0000",
            "id": 4
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "If anybody wants to come up with a patch meanwhile, please do so. Even though it\nwill not be checked in before 3.1, it would provide Owen with a manual solution\nif API compatibility is not an issue.",
            "date": "2005-10-05T18:52:20.000+0000",
            "id": 5
        },
        {
            "author": "Owen Smith",
            "body": "Created an attachment (id=16638)\nHackish patch\n\nI managed to generate this patch and tested it against both IAS and another\nproxy server.  It seems to fix this problem without breaking other things.  I\nknow that this isn't a very good solution and if someone with a better\nknowledge of the internals could figure out a way to clean it up that would be\ngreat.",
            "date": "2005-10-11T01:46:48.000+0000",
            "id": 6
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Created an attachment (id=16639)\nHackish patch (a slightly different take)\n\nThis patch is still butt-ugly, but it leaves DigestAuthScheme virginally\nignorant of ConnectMethod, which is in my opinion slightly less hackish\n\nWhat do you think?\n\nOleg",
            "date": "2005-10-11T03:11:15.000+0000",
            "id": 7
        },
        {
            "author": "Owen Smith",
            "body": "I've tested in on my system and it appears to work.  I'd say that your fix is\ndefinately less hackish than mine, probably the best that can be done for this\nversion of the API.  Thanks for the quick improvement.\n\nOwen\n\n(In reply to comment #8)\n> Created an attachment (id=16639) [edit]\n> Hackish patch (a slightly different take)\n> \n> This patch is still butt-ugly, but it leaves DigestAuthScheme virginally\n> ignorant of ConnectMethod, which is in my opinion slightly less hackish\n> \n> What do you think?\n> \n> Oleg\n\n",
            "date": "2005-10-11T04:22:16.000+0000",
            "id": 8
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "I agree this is most likely as good as it gets for 3.x API\n\nOleg",
            "date": "2005-10-11T04:49:05.000+0000",
            "id": 9
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Folks, any objections to committing this patch?\n\nOleg",
            "date": "2006-03-30T18:32:39.000+0000",
            "id": 10
        },
        {
            "author": "Ortwin Gl\u00fcck",
            "body": "Fine with me.\nTypo: in the deprecation warning there is a wrong reference to the c'tor (wrong\nparameter type).",
            "date": "2006-03-30T18:37:26.000+0000",
            "id": 11
        },
        {
            "author": "Oleg Kalnichevski",
            "body": "Patch committed to SVN TRUNK (3.1 branch)\n\nOleg",
            "date": "2006-03-30T19:11:27.000+0000",
            "id": 12
        }
    ],
    "component": "HttpClient (classic)",
    "description": "I'm having a problem getting httpclient-rc1 to authenticate using\ndigest to our IAS server.  I've tried upgrading to rc3 without any\neffect.  I also got our IT guys to upgrade IAS without luck.  I was\nalso able to have the GET method work under IAS and CONNECT to work\nwith a couple other proxy servers.  After examining ethereal logs for\nmy (commons) code and firefox to the same URLs I noticed that the\nvalue for the \"uri\" setting in the \"Proxy-Authorization\" header was\nthe only significant difference.  After looking at RFC 2617 I noticed\nthat in section 3.2.2 (The Authorization Request Header) it states:\n\ndigest-uri\nThe URI from Request-URI of the Request-Line; duplicated here because\nproxies are allowed to change the Request-Line in transit.\n\nA re-examination of the headers showed that firefox was matching the Request-URI\nwith the digest-uri but that httpclient was not.  I reproduced partial headers\nbelow.  I tried modifying the RC3 source to produce a hard-coded value for \"uri\"\nand demonstrated that it would successfully authenticate to that URI.  I also\nchecked that authentication would fail to any other URI and it did.\n\npartial httpclient header (fails with 407):\nCONNECT gmail.google.com:443 HTTP/1.1\nProxy-Authorization: Digest username=\"proxytest\", realm=\"Digest\",\nnonce=\"503902c343c8c501057a85cea6bad2734378fb44b4cbd1970bf320637871dae85373082cf70ac254\",\nuri=\"/\", response=\"7717d0738332a3d8e83e9102b5ead6b9\", qop=\"auth\", nc=00000001,\ncnonce=\"583aa0469b31290dc2acd7ec6cfc98f1\", algorithm=\"MD5-sess\",\nopaque=\"bb319760fce84856e5648d3536502d81\"\n\npartial firefox header (succeeds with 200):\nCONNECT mail1.combrio.local:443 HTTP/1.1\nProxy-Authorization: Digest username=\"proxytest\", realm=\"Digest\",\nnonce=\"0e61fe645ec8c5015aa3afe8cfe5219488ed473e277a8cddf8225ad66e74fd214f97d9d96ac99991\",\nuri=\"mail1.combrio.local:443\", algorithm=MD5-sess,\nresponse=\"bfac109287273e867531170475172ccf\",\nopaque=\"70cb2a1533b85882d0f1aa1e2ad1fbae\", qop=auth, nc=00000001,\ncnonce=\"b41aecd6e527e774\"",
    "hasPatch": true,
    "hasScreenshot": false,
    "id": "HTTPCLIENT-506",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "Major",
    "product": "HTTPCLIENT",
    "project": "HTTPCLIENT",
    "summary": "Digest auth uses wrong uri in proxy authentication",
    "systemSpecification": "Linux\nPC",
    "version": "3.0 RC1"
}
{
  "project_id" : 3,
  "name" : "eclipse-reporter",
  "bug_id" : 29802,
  "vote" : 1,
  "bug_severity" : "normal",
  "priority" : "P3",
  "product_name" : "XSD",
  "component_name" : "Runtime",
  "op_sys" : "Windows 2000",
  "creation_ts" : 1043057361000,
  "short_desc" : "XSDModelGroup.getParticles() list is not updated after a particle removal",
  "thetext" : "When a particle is removed from a model group, g, using g.getContents().remove\n(), the change is not propagated to g.getParticles() - the removed particle is \nstill in the list returned by g.getParticles().\n\nCODE illustrating the problem :\n\nimport java.util.Map;\n\nimport org.eclipse.xsd.XSDCompositor;\nimport org.eclipse.xsd.XSDElementDeclaration;\nimport org.eclipse.xsd.XSDFactory;\nimport org.eclipse.xsd.XSDForm;\nimport org.eclipse.xsd.XSDModelGroup;\nimport org.eclipse.xsd.XSDModelGroupDefinition;\nimport org.eclipse.xsd.XSDParticle;\nimport org.eclipse.xsd.XSDSchema;\nimport org.eclipse.xsd.util.XSDConstants;\n\n/**\n *\n *\n * When a particle is removed from a model group, g, using g.getContents\n().remove(), the change\n * is not propagated to g.getParticles() - the removed particle is still in the \nlist returned by\n * g.getParticles()..\n */\npublic class RemovalOfParticleSynchronizationBug {\n\n\tpublic static void main(String[] args) {\n\t\tXSDFactory xsdFac=XSDFactory.eINSTANCE;\n\t\tXSDSchema schema=xsdFac.createXSDSchema();\n\t\t\n\t    // associate \"xsd\" prefix to the schema namespace\n  \t\tschema.setSchemaForSchemaQNamePrefix(\"xsd\");\n\t\tMap qNamePrefixToNamespaceMap = \nschema.getQNamePrefixToNamespaceMap();\n  \t\tqNamePrefixToNamespaceMap.put\n(schema.getSchemaForSchemaQNamePrefix(), \nXSDConstants.SCHEMA_FOR_SCHEMA_URI_2001);\n \t\t//\n  \t\t\n  \t\t//set target namespace\n  \t\tschema.setTargetNamespace(\"http://www.testcases.org\");\n  \t\tqNamePrefixToNamespaceMap.put(\"tns\", schema.getTargetNamespace\n());\n  \t\t//\n  \t\t\n  \t\tXSDModelGroupDefinition \ngroupDef=xsdFac.createXSDModelGroupDefinition();\n  \t\t// 1. add the group to the schema\n  \t\tschema.getContents().add(groupDef);\n  \t\t// 2. set the name of the group\n  \t\tgroupDef.setName(\"group1\");\n  \t\t\n\t\t\t\t\n        // 3. add a sequence in groupDef\n        XSDModelGroup group = xsdFac.createXSDModelGroup();\n        group.setCompositor(XSDCompositor.SEQUENCE_LITERAL);\n        groupDef.setModelGroup(group);\n        \n        // 4. create a local element declaration e and set its name\n        XSDElementDeclaration e=xsdFac.createXSDElementDeclaration();\n        e.setName(\"e\");\n        e.setForm(XSDForm.QUALIFIED_LITERAL);\n\t \n\t \t\n\n\t\t// 5. create a particle containing e and\n\t\t// add it to the model group of the model group definition\n\t\tXSDParticle part=xsdFac.createXSDParticle();\n\t\t//part.setMaxOccurs(1);\n\t\t//part.setMinOccurs(1);\n\t\tpart.setContent(e);\n\t\tgroup.getContents().add(part);\n\t\t\n\t\t\n\t\t// 6 create another local element declaration f and set its name\n        XSDElementDeclaration f=xsdFac.createXSDElementDeclaration();\n        f.setName(\"f\");\n        \n        // 7. create a particle containing f and\n\t\t// add it to the model group of the model group definition\n\t\tXSDParticle partForf=xsdFac.createXSDParticle();\n\t\tpartForf.setContent(f);\n\t\tgroup.getContents().add(partForf);\n\t\t\n\t\t// Display the number of particle\n\t\tSystem.out.println(\"Number of particles before removal \n(abstract level: getParticles()): \"+group.getParticles().size());\n\t\tSystem.out.println(\"Number of components before removal \n(concrete level: getContents()): \"+group.getContents().size());\n\t\t\n\t\t\n\t\t\n\t\t// 8. IMPORTANT : we remove part from group\n\t\tgroup.getContents().remove(part);\n\t\t\n\t\t// Display the number of particle\n\t\tSystem.out.println(\"Number of particles after removal (abstract \nlevel: getParticles()): \"+group.getParticles().size());\n\t\tSystem.out.println(\"Number of components after removal \n(concrete level: getContents()): \"+group.getContents().size());\n\t\t\n\t\t\n       \n\t}\n}"
}
{
    "comments": [
        {
            "author": null,
            "body": "Sounds like the client closed the connection while still writing content. Please\nuse tomcat-user to debug this",
            "date": "20050303T00:08:42",
            "id": 0
        },
        {
            "author": null,
            "body": "All this is happening from JSPs that use JSP tags. These JSPs work fine under\nnormal load. If the stream is closed incorrectly by user code then this should\nhappen all the time, not just under load.",
            "date": "20050303T01:50:23",
            "id": 1
        },
        {
            "author": null,
            "body": "Looking at BodyContentImpl - the error is thrown if something tries to call\nwrite some time after close was already called on the BodyContent. Why close was\ncalled is up to your code. (For example, sendredirects, writing to stream after\na forwards, ...)",
            "date": "20050303T03:01:48",
            "id": 2
        },
        {
            "author": null,
            "body": "There are no explicit stream closes in JSP. The JSPs use Struts tags which work\nfine for some time and fail with these errors after some time and under load. If\nit  is a code issue it should fail consistently under normal cases too. This\ncould be a  problem with how Tomcat handles JSP tags at run-time. If you need\nmore information, I will be glad to provide.",
            "date": "20050303T04:14:17",
            "id": 3
        },
        {
            "author": null,
            "body": "Your code has a concurrency issue. Use tomcat-user to debug.",
            "date": "20050303T12:21:31",
            "id": 4
        },
        {
            "author": null,
            "body": "There is no user code. It is JSP tags + code generated by Tomcat for the JSP.\nAre you suggesting there is a concurrency issue in Tomcat runtime and/or\ngenerated code for JSP pages with tags?",
            "date": "20050303T14:43:27",
            "id": 5
        },
        {
            "author": null,
            "body": "use tomcat-user",
            "date": "20050303T14:52:10",
            "id": 6
        },
        {
            "author": null,
            "body": "(In reply to comment #7)\n> use tomcat-user\n\nThanks. I have already posted to tomcat-user mailing list.",
            "date": "20050303T14:58:41",
            "id": 7
        },
        {
            "author": null,
            "body": "I have been looking at Jasper source for this problem as I did not much help\nfrom tomcat-user mailing list. \n\nI think there are some problems related to PageContextImpl pooling. Please take\na moment to look at the details.\n\norg.apache.jasper.runtime.JspFactoryImpl class by default pools PageContextImpl\nobjects. PageContextImpl.initialize() is called when a pc is retrieved from the\npool, and PageContextImpl.release() is called when a pc is returned to the pool.\n\nLooking at the org.apache.jasper.runtime.PageContextImpl class, the data member\n\"outs\" which is BodyContentImpl[] is not cleared both in initialize and release\nmethods. \n\nLooking at the stack trace attached with this bug report, I think this may be\nthe cause of problems with our application. I am going to try disabling\nPageContextImpl pooling and see.\n",
            "date": "20050307T14:13:53",
            "id": 8
        },
        {
            "author": null,
            "body": "Remy has committed a fix. See ..\nhttp://marc.theaimsgroup.com/?l=tomcat-dev&m=110995942120860&w=2\n\nThis may fix this issue.",
            "date": "20050307T14:31:52",
            "id": 9
        },
        {
            "author": null,
            "body": "Remy's fix may not fix the problem. The \"closed\" flag is set in setWriter()\nmethod, but the \"Stream closed\" exceptions happen in ensureOpen() which is\ncalled when writer == null.",
            "date": "20050307T14:44:38",
            "id": 10
        },
        {
            "author": null,
            "body": "This has been fixed. Please do not reopen the report.",
            "date": "20050307T15:00:30",
            "id": 11
        },
        {
            "author": null,
            "body": "Please look in the code which uses BodyContentImpl. setWriter will always be\ncalled by PageContextImpl.pushBody.",
            "date": "20050308T02:04:09",
            "id": 12
        },
        {
            "author": null,
            "body": "I have looked at the code. Please take a look at the stack trace and the\nBodyContentImpl code. As the stack trace shows the exception is from\nensureOpen() call. if setWriter() is called always this should not happen\naccording to the code\n",
            "date": "20050308T06:44:43",
            "id": 13
        },
        {
            "author": null,
            "body": "Okay. Setting the \"closed\" flag in setWriter() called from\nPageContextImpl.pushBody() should avoid \"Stream closed\" exception from\nensureOpen(). \n\nI still think some thing may be wrong in recycling PageContextImpl objects. Can\nyou please look at comment# 9?\n",
            "date": "20050308T11:15:24",
            "id": 14
        },
        {
            "author": null,
            "body": "No, recycling of the BodyContent objects is not needed (well, it is needed, and\ndone in setWriter, which is always called by pushBody). If you disagree, please\nprovide tangible proof.\n\nIf you want to disable this anyway, it's easy to do.",
            "date": "20050308T11:41:37",
            "id": 15
        },
        {
            "author": null,
            "body": "Thanks for your help and clarifications. I will give this a try and see how it\nworks.",
            "date": "20050308T12:40:58",
            "id": 16
        },
        {
            "author": null,
            "body": "Another related question. If \"closed\" flag was not initialized properly in\nBodyContentImpl.setWriter(), one would expect to fail with \"Stream closed\"\nexceptions consistently for a specific application such as ours, but this is not\nthe case. The application runs fine for a few hours without any issues and all\nof a sudden these errors occur. Any reason or theory for this behavior?",
            "date": "20050309T08:47:29",
            "id": 17
        },
        {
            "author": null,
            "body": "Update: We have been using with the patched version of jasper-runtime.jar for a\nfew weeks. In our test regions, we start getting the following errors after\nrunning successfully for few hours, and at this time, only option is to restart\nthe server.\n\nHere is the detailed stack trace:\n\n2005-03-23 02:21:14,731 ERROR [org.jboss.web.localhost.Engine]\nApplicationDispatcher[] Servlet.service() for servlet jsp threw exception\njava.lang.NullPointerException\n\tat org.apache.jasper.runtime.BodyContentImpl.reAllocBuff(BodyContentImpl.java:585)\n\tat org.apache.jasper.runtime.BodyContentImpl.write(BodyContentImpl.java:142)\n\tat org.apache.jasper.runtime.BodyContentImpl.write(BodyContentImpl.java:157)\n\tat\norg.apache.jsp.protected_.inquiry.participant.ParticipantSummary_jsp._jspx_meth_res_encodeUrl_0(Unknown\nSource)\n\tat\norg.apache.jsp.protected_.inquiry.participant.ParticipantSummary_jsp._jspx_meth_req_equalsParameter_0(Unknown\nSource)\n\tat\norg.apache.jsp.protected_.inquiry.participant.ParticipantSummary_jsp._jspService(Unknown\nSource)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:810)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:810)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n\tat\norg.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:704)\n\tat\norg.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)\n\tat\norg.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:510)\n\tat org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:966)\n\tat org.apache.jasper.runtime.PageContextImpl.include(PageContextImpl.java:602)\n\tat com.citistreet.id.i401k.util.JspUtility.include(JspUtility.java:66)\n\tat org.apache.jsp.protected_.common.ipsrPage_jsp._jspService(Unknown Source)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:810)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:810)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n\tat\norg.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:704)\n\tat\norg.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:474)\n\tat\norg.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:409)\n\tat\norg.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)\n\tat org.apache.struts.action.RequestProcessor.doForward(RequestProcessor.java:1069)\n\tat\norg.apache.struts.action.RequestProcessor.processForwardConfig(RequestProcessor.java:455)\n\tat\ncom.citistreet.id.i401k.struts.util.PwebRequestProcessor.processForwardConfig(PwebRequestProcessor.java:96)\n\tat org.apache.struts.action.RequestProcessor.process(RequestProcessor.java:279)\n\tat org.apache.struts.action.ActionServlet.process(ActionServlet.java:1482)\n\tat\ncitistreet.id.struts.action.AbstractController.process(AbstractController.java:141)\n\tat com.citistreet.id.i401k.struts.action.Controller.process(Controller.java:142)\n\tat org.apache.struts.action.ActionServlet.doGet(ActionServlet.java:507)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:697)\n\tat\ncitistreet.id.struts.action.AbstractController.service(AbstractController.java:108)\n\tat com.citistreet.id.i401k.struts.action.Controller.service(Controller.java:118)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:810)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n\tat\norg.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:704)\n\tat\norg.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:474)\n\tat\norg.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:409)\n\tat\norg.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)\n\tat org.apache.struts.action.RequestProcessor.doForward(RequestProcessor.java:1069)\n\tat\norg.apache.struts.action.RequestProcessor.processForwardConfig(RequestProcessor.java:455)\n\tat\ncom.citistreet.id.i401k.struts.util.PwebRequestProcessor.processForwardConfig(PwebRequestProcessor.java:96)\n\tat org.apache.struts.action.RequestProcessor.process(RequestProcessor.java:279)\n\tat org.apache.struts.action.ActionServlet.process(ActionServlet.java:1482)\n\tat\ncitistreet.id.struts.action.AbstractController.process(AbstractController.java:141)\n\tat com.citistreet.id.i401k.struts.action.Controller.process(Controller.java:142)\n\tat org.apache.struts.action.ActionServlet.doGet(ActionServlet.java:507)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:697)\n\tat\ncitistreet.id.struts.action.AbstractController.service(AbstractController.java:108)\n\tat com.citistreet.id.i401k.struts.action.Controller.service(Controller.java:118)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:810)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n\tat citistreet.id.servlet.filter.AbstractFilter.doFilter(AbstractFilter.java:79)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n\tat citistreet.id.servlet.filter.AbstractFilter.doFilter(AbstractFilter.java:79)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n\tat\ncom.citistreet.id.i401k.servlet.filter.TimingFilter.doFilter(TimingFilter.java:54)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n\tat\norg.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:75)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n\tat\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)\n\tat\norg.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)\n\tat\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)\n\tat\norg.jboss.web.tomcat.security.CustomPrincipalValve.invoke(CustomPrincipalValve.java:66)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)\n\tat\norg.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:158)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)\n\tat\norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:462)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:535)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)\n\tat\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)\n\tat org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)\n\tat\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)\n\tat org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)\n\tat\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)\n\tat java.lang.Thread.run(Thread.java:534)",
            "date": "20050324T08:56:50",
            "id": 18
        },
        {
            "author": null,
            "body": "As I said, if you wanted to avoid this kind of problems (which I do not mind\nfixing), you should avoid using close inside your tags, which is completely useless.",
            "date": "20050324T15:59:00",
            "id": 19
        },
        {
            "author": null,
            "body": "(In reply to comment #20)\n> As I said, if you wanted to avoid this kind of problems (which I do not mind\n> fixing), you should avoid using close inside your tags, which is completely\nuseless.\n\nI am not asking you to fix my tags. These are standard jakarta tags from taglibs\nproject. Please take a look at the stack trace. These are from BodyContentImpl\nclass from jasper runtime. There are no close() calls from the tags. This is an\nissue that is internal to Tomcat/Jasper most probably from pooling of jasper\nruntime objects. The same application was working fine for years with Weblogic\nservers. Can you explain why it would work for few hours and fail later? If it\nis due to close() calls from tag implementation, it should fail all the time. ",
            "date": "20050324T18:34:39",
            "id": 20
        },
        {
            "author": null,
            "body": "I am re-opening this bug. Please provide explanation before closing. This\nproblem is in our production systems and we are forced to restart instances\nseveral times.",
            "date": "20050325T02:05:26",
            "id": 21
        },
        {
            "author": null,
            "body": "That was just an advice that you shouldn't be calling close in your tags since\nit is useless (obviously, the tag calling close will not be the one then\nexperiencing the exception: it can be fairly random).\nI marked the bug as fixed since I fixed the issue in CVS.",
            "date": "20050325T11:01:50",
            "id": 22
        },
        {
            "author": null,
            "body": "Are you talking about the fix you made in BodyContentImpl.setWriter() method to\nset closed = false? If so, please note that this is happening \"after\" the fix.\nWe are using the patched jasper-runtime.jar with that fix.\n\nOr, Did you make a new fix after I re-opened the bug?",
            "date": "20050325T14:35:37",
            "id": 23
        },
        {
            "author": null,
            "body": "Yes, I did make a new change in CVS.",
            "date": "20050325T17:19:15",
            "id": 24
        },
        {
            "author": null,
            "body": "I checked tomcat-dev mailing list for cvs-commit messages by you. I did not see\nit in there. Can you please tell me what classes changed exactly?",
            "date": "20050326T03:20:19",
            "id": 25
        },
        {
            "author": null,
            "body": "remm        2005/03/24 03:41:29\n\n  Modified:    jasper2/src/share/org/apache/jasper/runtime\n                        BodyContentImpl.java\n  Log:\n  - Close shouldn't null the char buffer.\n  \n  Revision  Changes    Path\n  1.15      +0 -1     \njakarta-tomcat-jasper/jasper2/src/share/org/apache/jasper/runtime/BodyContentImpl.java\n  \n  Index: BodyContentImpl.java\n  ===================================================================\n  RCS file:\n/home/cvs/jakarta-tomcat-jasper/jasper2/src/share/org/apache/jasper/runtime/BodyContentImpl.java,v\n  retrieving revision 1.14\n  retrieving revision 1.15\n  diff -u -r1.14 -r1.15\n  --- BodyContentImpl.java\t4 Mar 2005 18:00:41 -0000\t1.14\n  +++ BodyContentImpl.java\t24 Mar 2005 11:41:29 -0000\t1.15\n  @@ -496,7 +496,6 @@\n   \tif (writer != null) {\n   \t    writer.close();\n   \t} else {\n  -\t    cb = null;\t\n   \t    closed = true;\n   \t}\n       }\n",
            "date": "20050326T09:28:42",
            "id": 26
        }
    ],
    "component": "Jasper",
    "description": "We have a Struts based application deployed on JBoss 3.2.6. In our production\nenvironment under load the servers throw \"Stream closed\" errors and after that\nthe servers do not work and forced to restart.  We have not seen this problem in\ntest regions where the load is lower.  We have tried disabling tag pooling in\nTomcat, but that does not seem to help fix the problems. Does any one else have\nsimilar issues in production environment?\n\nThe server encountered an internal error () that prevented it from fulfilling\nthis request.\nexception\njava.io.IOException: Stream closed\norg.apache.jasper.runtime.BodyContentImpl.ensureOpen(BodyContentImpl.java:576)\norg.apache.jasper.runtime.BodyContentImpl.write(BodyContentImpl.java:140)\norg.apache.jasper.runtime.BodyContentImpl.write(BodyContentImpl.java:157)\norg.apache.jsp.protected_.security.AvailApplications_jsp._jspService(AvailApplications_jsp.java:210)\norg.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)\njavax.servlet.http.HttpServlet.service(HttpServlet.java:810)\norg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)\norg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)\norg.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)\njavax.servlet.http.HttpServlet.service(HttpServlet.java:810)\norg.apache.struts.action.RequestProcessor.doForward(RequestProcessor.java:1069)\norg.apache.struts.action.RequestProcessor.processForwardConfig(RequestProcessor.java:455)\ncom.citistreet.id.i401k.struts.util.PwebRequestProcessor.processForwardConfig(PwebRequestProcessor.java:96)\norg.apache.struts.action.RequestProcessor.process(RequestProcessor.java:279)\norg.apache.struts.action.ActionServlet.process(ActionServlet.java:1482)\ncitistreet.id.struts.action.AbstractController.process(AbstractController.java:141)\ncom.citistreet.id.i401k.struts.action.Controller.process(Controller.java:142)\norg.apache.struts.action.ActionServlet.doGet(ActionServlet.java:507)\njavax.servlet.http.HttpServlet.service(HttpServlet.java:697)\ncitistreet.id.struts.action.AbstractController.service(AbstractController.java:108)\ncom.citistreet.id.i401k.struts.action.Controller.service(Controller.java:118)\njavax.servlet.http.HttpServlet.service(HttpServlet.java:810)\ncitistreet.id.servlet.filter.AbstractFilter.doFilter(AbstractFilter.java:79)\ncitistreet.id.servlet.filter.AbstractFilter.doFilter(AbstractFilter.java:79)\ncom.citistreet.id.i401k.servlet.filter.TimingFilter.doFilter(TimingFilter.java:54)\norg.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:75)\n\nThanks\nPurush",
    "hasPatch": false,
    "hasScreenshot": false,
    "id": "33810",
    "issuetypeClassified": "BUG",
    "issuetypeTracker": "BUG",
    "priority": "P1 critical",
    "product": "Tomcat 5",
    "project": "TOMCAT",
    "summary": "Stream closed errors from JSP tags under load",
    "systemSpecification": "linux pc",
    "version": "5.0.28"
}